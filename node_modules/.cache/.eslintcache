[{"/Users/raphaelhebert/Desktop/snake/src/index.js":"1","/Users/raphaelhebert/Desktop/snake/src/reportWebVitals.js":"2","/Users/raphaelhebert/Desktop/snake/src/App.js":"3","/Users/raphaelhebert/Desktop/snake/src/component/snake/index.js":"4","/Users/raphaelhebert/Desktop/snake/src/component/ScoreBar.js":"5","/Users/raphaelhebert/Desktop/snake/src/component/Lost.js":"6"},{"size":501,"mtime":1646282787798,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1645970390054,"results":"9","hashOfConfig":"8"},{"size":958,"mtime":1646383264929,"results":"10","hashOfConfig":"8"},{"size":4106,"mtime":1646281399390,"results":"11","hashOfConfig":"8"},{"size":199,"mtime":1646281627782,"results":"12","hashOfConfig":"8"},{"size":381,"mtime":1646282804038,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"18wtumh",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"17"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"/Users/raphaelhebert/Desktop/snake/src/index.js",[],[],["34","35"],"/Users/raphaelhebert/Desktop/snake/src/reportWebVitals.js",[],[],"/Users/raphaelhebert/Desktop/snake/src/App.js",["36"],[],"/Users/raphaelhebert/Desktop/snake/src/component/snake/index.js",["37","38"],[],"import { useState, useEffect } from 'react'\nimport '../../App.css'\n\nconst Snake = ({ apple, applePos, loose }) => {\n    const [head, setHead] = useState([48, 48]) //top, left\n    const [play, setPlay] = useState(false)\n    const [body, setBody] = useState([])\n    const [direction, setDirection] = useState('ArrowRight') //setup for starts and checks snake does go in unauthorized direction\n\n    const appleTop = apple[0] + '%'\n    const appleLeft = apple[1] +  '%'\n\n    const headTop = head[0] + '%'\n    const headLeft = head[1] + '%'\n\n   \n\n    const headPos = (direction) => {\n        switch(direction){\n          case \"ArrowRight\":\n            setHead([head[0], (head[1] + 2) % 100])\n            break\n          case \"ArrowLeft\":\n            setHead([head[0], (100 + (head[1] - 2)) % 100])\n            break\n          case \"ArrowDown\":\n            setHead([ (head[0] + 2) % 100, head[1]])\n            break\n          case \"ArrowUp\":\n            setHead([(100 + (head[0] - 2)) % 100, head[1]]);\n            break\n          default:\n            break;\n        }\n    }\n    \n    const handleKeyDown = e => {\n        e.preventDefault();\n        if(body.length > 0){\n            switch(e.key){\n                case \"ArrowUp\":\n                    if(direction === \"ArrowDown\" || direction === \"ArrowUp\"){\n                        return\n                    } \n                    break;\n                case \"ArrowDown\":\n                    if(direction === \"ArrowUp\" || direction === \"ArrowDown\"){\n                        return\n                    }\n                    break;\n                case \"ArrowRight\":\n                    if(direction === \"ArrowLeft\" || direction === \"ArrowRight\"){\n                        return\n                    }\n                    break;\n                case \"ArrowLeft\":\n                    if(direction === \"ArrowLeft\" || direction === \"ArrowRight\"){\n                        return\n                    }\n                    break;\n            }\n        }\n        if([\"ArrowUp\", \"ArrowLeft\", \"ArrowRight\", \"ArrowDown\"].includes(e.key)){\n            window.localStorage.setItem(\"snakeRunner\", JSON.stringify({'direction': e.key}))\n        } else if(e.key === \"Enter\"){\n            setPlay(!play);\n            setHead([head[0], head[1]])\n        }\n    }\n\n    useEffect(() => {\n        const bodySearch = 'o' + body.join('o').toString() + 'o'\n        console.log(bodySearch)\n        const headCheck = \"o\" + [head[0] + '%', head[1] + '%'].toString() + \"o\"\n        console.log(headCheck)\n        if(bodySearch.includes(headCheck)){\n            setPlay(false)\n            loose();\n        }\n        setTimeout(() => {\n            const storage = window.localStorage.getItem(\"snakeRunner\")\n            const newDirection = JSON.parse(storage)\n            if(play && [\"ArrowUp\", \"ArrowLeft\", \"ArrowRight\", \"ArrowDown\"].includes(newDirection.direction)){\n                if(head[0] === apple[0] && head[1] === apple[1]){\n                    setBody([[headTop, headLeft], ...body])\n                    applePos()\n                } else {\n                    if(body.length > 0){\n                        const newBody = body.slice(0, body.length - 1)\n                        newBody.unshift([headTop, headLeft])\n                        setBody(newBody)\n                    }\n                }\n                setDirection(newDirection.direction);\n                headPos(newDirection.direction);\n            }   \n        }, 200)\n    }, [head])\n\n    return(\n        <>\n        <div className='main' onKeyDown={handleKeyDown} tabIndex=\"0\">\n            <div className='container'>\n                <div className='screen'>\n                    <div className=\"apple\" style={{top: appleTop, left: appleLeft }} />\n                    <div className=\"head\" style={{top: headTop, left: headLeft }}/>\n                    { body.length > 0 && body.map(bodyPart => \n                            <div className=\"bodyPart\" style={{top: bodyPart[0], left: bodyPart[1] }}/>\n    \n                    )}\n\n                </div>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default Snake","/Users/raphaelhebert/Desktop/snake/src/component/ScoreBar.js",[],[],"/Users/raphaelhebert/Desktop/snake/src/component/Lost.js",[],[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":30,"column":31,"nodeType":"45","endLine":30,"endColumn":33,"suggestions":"46"},{"ruleId":"47","severity":1,"message":"48","line":40,"column":13,"nodeType":"49","messageId":"50","endLine":61,"endColumn":14},{"ruleId":"43","severity":1,"message":"51","line":98,"column":8,"nodeType":"45","endLine":98,"endColumn":14,"suggestions":"52"},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'applePos'. Either include it or remove the dependency array.","ArrayExpression",["55"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'apple', 'applePos', 'body', 'headLeft', 'headPos', 'headTop', 'loose', and 'play'. Either include them or remove the dependency array. If 'loose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["56"],"no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},{"desc":"59","fix":"60"},"Update the dependencies array to be: [applePos]",{"range":"61","text":"62"},"Update the dependencies array to be: [apple, applePos, body, head, headLeft, headPos, headTop, loose, play]",{"range":"63","text":"64"},[709,711],"[applePos]",[3458,3464],"[apple, applePos, body, head, headLeft, headPos, headTop, loose, play]"]
[{"/Users/raphaelhebert/Desktop/snake/src/index.js":"1","/Users/raphaelhebert/Desktop/snake/src/reportWebVitals.js":"2","/Users/raphaelhebert/Desktop/snake/src/App.js":"3","/Users/raphaelhebert/Desktop/snake/src/component/snake/index.js":"4","/Users/raphaelhebert/Desktop/snake/src/component/ScoreBar.js":"5","/Users/raphaelhebert/Desktop/snake/src/component/Lost.js":"6","/Users/raphaelhebert/Desktop/snake/src/component/SnakeForm.js":"7","/Users/raphaelhebert/Desktop/snake/src/component/RegisterForm.js":"8","/Users/raphaelhebert/Desktop/snake/src/component/SignIn.js":"9"},{"size":589,"mtime":1646484779735,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1645970390054,"results":"12","hashOfConfig":"11"},{"size":1214,"mtime":1646532066354,"results":"13","hashOfConfig":"11"},{"size":5310,"mtime":1646533343816,"results":"14","hashOfConfig":"11"},{"size":212,"mtime":1646482848894,"results":"15","hashOfConfig":"11"},{"size":381,"mtime":1646282804038,"results":"16","hashOfConfig":"11"},{"size":1146,"mtime":1646533013730,"results":"17","hashOfConfig":"11"},{"size":3703,"mtime":1646533382227,"results":"18","hashOfConfig":"11"},{"size":2600,"mtime":1646533461778,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"18wtumh",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"23"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"23"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},"/Users/raphaelhebert/Desktop/snake/src/index.js",[],[],["53","54"],"/Users/raphaelhebert/Desktop/snake/src/reportWebVitals.js",[],[],["55","56"],"/Users/raphaelhebert/Desktop/snake/src/App.js",["57","58"],[],"import { useEffect, useState } from 'react'\nimport { Routes, Route } from 'react-router-dom'\n\nimport './App.css';\n\nimport Snake from './component/snake'\nimport Lost from './component/Lost'\nimport RegisterForm from './component/RegisterForm';\nimport SignIn from './component/SignIn';\n\n\nfunction App() {\n  const [apple, setApple] = useState([0,0])\n  const [score, setScore] = useState(-1)\n  const [lost, setLost] = useState(false)\n\n  const loose = () => {\n    setLost(true)\n  }\n\n  const applePos = () => {\n    let top = Math.floor( Math.random() * 100 ).toString()\n    let left = Math.floor( Math.random() * 100 ).toString()\n  \n    top = top - (top % 2)\n    left = left - (left % 2)\n    console.log(`apple: ${top} ${left}`)\n    setApple([top, left])\n    setScore(score + 1)\n  }\n\n  useEffect(() => applePos(), [])\n\n  return (\n    <>\n    <Routes>\n      <Route path=\"/\" element={<>\n      {lost && <Lost score={score}/>}\n        <Snake apple={apple} applePos={applePos} score={score >= 0? score: 0} loose={loose} lost={lost} score={score}/>\n      </>}/>\n        <Route path=\"/register\" element={<RegisterForm />} />\n        <Route path=\"/SignIn\" element={<SignIn />} />\n    </Routes>\n    </>\n  );\n}\n\nexport default App;\n","/Users/raphaelhebert/Desktop/snake/src/component/snake/index.js",["59"],[],"import { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\n\nimport ScoreBar from '../ScoreBar'\nimport SnakeForm from '../SnakeForm'\nimport '../../App.css'\n\n\n\nconst Snake = ({ apple, applePos, loose, score }) => {\n    const [head, setHead] = useState([48, 48]) //top, left\n    const [play, setPlay] = useState(false)\n    const [body, setBody] = useState([])\n    const [direction, setDirection] = useState('ArrowRight') //setup for starts and checks snake does go in unauthorized direction\n    const [speed, setSpeed] = useState(200)\n\n    const appleTop = apple[0] + '%'\n    const appleLeft = apple[1] +  '%'\n\n    const headTop = head[0] + '%'\n    const headLeft = head[1] + '%'\n\n    //handle options form\n    const handleChange = e => {\n        setSpeed(parseInt(e.target.value))\n    }\n\n    const headPos = (direction) => {\n        switch(direction){\n          case \"ArrowRight\":\n            setHead([head[0], (head[1] + 2) % 100])\n            break\n          case \"ArrowLeft\":\n            setHead([head[0], (100 + (head[1] - 2)) % 100])\n            break\n          case \"ArrowDown\":\n            setHead([ (head[0] + 2) % 100, head[1]])\n            break\n          case \"ArrowUp\":\n            setHead([(100 + (head[0] - 2)) % 100, head[1]]);\n            break\n          default:\n            break;\n        }\n    }\n    \n    const handleKeyDown = e => {\n        e.preventDefault();\n        if(body.length > 0){\n            switch(e.key){\n                case \"ArrowUp\":\n                    if(direction === \"ArrowDown\" || direction === \"ArrowUp\"){\n                        return\n                    } \n                    break;\n                case \"ArrowDown\":\n                    if(direction === \"ArrowUp\" || direction === \"ArrowDown\"){\n                        return\n                    }\n                    break;\n                case \"ArrowRight\":\n                    if(direction === \"ArrowLeft\" || direction === \"ArrowRight\"){\n                        return\n                    }\n                    break;\n                case \"ArrowLeft\":\n                    if(direction === \"ArrowLeft\" || direction === \"ArrowRight\"){\n                        return\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        if([\"ArrowUp\", \"ArrowLeft\", \"ArrowRight\", \"ArrowDown\"].includes(e.key)){\n            window.localStorage.setItem(\"snakeRunner\", JSON.stringify({'direction': e.key}))\n        }\n        // else if(e.key === \"Enter\"){\n        //     if(!play){\n        //         setPlay(!play);\n        //         setHead([head[0], head[1]])\n        //     }\n        // }\n    }\n\n    const clickPlay = () => {\n        if(!play){\n            setPlay(!play);\n            setHead([head[0], head[1]])\n        }\n    }\n\n    useEffect(() => {\n        const bodySearch = 'o' + body.join('o').toString() + 'o'\n        console.log(bodySearch)\n        const headCheck = \"o\" + [head[0] + '%', head[1] + '%'].toString() + \"o\"\n        console.log(headCheck)\n        if(bodySearch.includes(headCheck)){\n            setPlay(false)\n            loose();\n        }\n        setTimeout(() => {\n            const storage = window.localStorage.getItem(\"snakeRunner\")\n            const newDirection = JSON.parse(storage)\n            if(play && [\"ArrowUp\", \"ArrowLeft\", \"ArrowRight\", \"ArrowDown\"].includes(newDirection.direction)){\n                if(head[0] === apple[0] && head[1] === apple[1]){\n                    setBody([[headTop, headLeft], ...body])\n                    applePos()\n                } else {\n                    if(body.length > 0){\n                        const newBody = body.slice(0, body.length - 1)\n                        newBody.unshift([headTop, headLeft])\n                        setBody(newBody)\n                    }\n                }\n                setDirection(newDirection.direction);\n                headPos(newDirection.direction);\n            }   \n        }, speed)\n    }, [head])\n\n    return(\n        <div className='main' onKeyDown={handleKeyDown} tabIndex=\"0\">\n            <div className=\"flexColCenter sideDiv\">\n                <h1>The Snake</h1>\n                <p>This is the snake, you know the rules...\n                Press <span>Play !</span> to start playing and use the <span>arrow keys</span> on your keyboard to change the snake's direction.</p>\n                <p>Connect to your account to save your score and eventually appear on the top players list: \n                <span><Link to=\"/SignIn\" style={{textDecoration: 'none'}}> Go to the login page</Link></span></p>\n                <SnakeForm handleChange={handleChange} speed={speed} play={play} clickPlay={clickPlay}/>\n                <ScoreBar score={score >= 0? score: 0} />\n            </div>\n            <div className='container'>\n                <div className='screen'>\n                    <div className=\"apple\" style={{top: appleTop, left: appleLeft }} />\n                    <div className=\"head\" style={{top: headTop, left: headLeft }}/>\n                    { body.length > 0 && body.map(bodyPart => \n                            <div className=\"bodyPart\" style={{top: bodyPart[0], left: bodyPart[1] }}/>\n\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Snake;","/Users/raphaelhebert/Desktop/snake/src/component/ScoreBar.js",[],[],"/Users/raphaelhebert/Desktop/snake/src/component/Lost.js",[],[],"/Users/raphaelhebert/Desktop/snake/src/component/SnakeForm.js",[],[],"/Users/raphaelhebert/Desktop/snake/src/component/RegisterForm.js",["60"],[],"import { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport * as yup from 'yup'\nimport axios from 'axios'\n\nimport '../App.css'\n\n\nconst handleSubmit = e => {\n    e.preventDefault()\n    //post to the backend\n}\n\nconst schema = yup.object().shape({\n    uname: yup\n        .string()\n        .required(\"a username is required\")\n        .min(3, \"must be at least 3 characters long\")\n        .max(24, \"username is 24 characters max\"),\n    email: yup\n        .string()\n        .email('Must be a valid email')\n        .max(255)\n        .required('Email is required'),\n    password: yup\n        .string()\n        .required('Please Enter your password')\n        .matches(\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n        \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n        ),\n    passwordConfirmation: yup\n        .string()\n        .oneOf([yup.ref('password'), null], 'Passwords must match')\n\n})\n\nconst RegisterForm = () => {\n    const[disable, setDisable]= useState(true)\n    const[formData, setFormData] = useState({\n        uname: \"\",\n        email: \"\",\n        password: \"\",\n        passwordConfirmation: \"\"\n    })\n\n    const[formErrors, setFormErrors] = useState({\n        uname: \"\",\n        email: \"\",\n        password: \"\",\n        passwordConfirmation: \"\"\n    })\n\n    const handleFormError = (name, value) => {\n        yup.reach(schema, name).validate(value)\n            .then(() => {\n                setFormErrors({\n                    ...formErrors,\n                    [name]: ''\n                })\n            })\n            .catch(err => {\n                setFormErrors({\n                    ...formErrors,\n                    [name]: err.errors[0]\n                })\n            })\n    }\n\n    const handleChange = e => {\n        const {name, value} = e.target\n        setFormData({\n            ...formData,\n            [name]: value,\n        })\n        handleFormError(name, value)\n    }\n\n    useEffect(() => {\n        schema.isValid(formData)\n            .then(valid => setDisable(!valid))\n    }, [formData])\n\n    return(\n        <div className=\"flexColCenter\">\n            <h2> Sign up!</h2>\n            <p> Sign up to be able to login and compete with the other players</p>\n            <form className=\"formLabels signForms\" onSubmit={handleSubmit}>\n                <label className=\"formLabels\"> Username: \n                    <input name='uname' onChange={handleChange} value={formData.uname} type=\"text\" maxLength=\"24\"/>\n                    <p>{formErrors.uname}</p>\n                </label>\n                <label className=\"formLabels\"> email: \n                    <input name='email' onChange={handleChange} value={formData.email} type=\"email\" maxLength=\"255\"/>\n                    <p>{formErrors.email}</p>\n                </label>\n                <label className=\"formLabels\"> Password: \n                    <input name='password' onChange={handleChange} value={formData.password} type=\"password\" />\n                    <p>{formErrors.password}</p>\n                </label>\n                <label className=\"formLabels\"> Password confirmation: \n                    <input name='passwordConfirmation' onChange={handleChange} value={formData.passwordConfirmation} type=\"password\" />\n                    <p>{formErrors.passwordConfirmation}</p>\n                </label>\n                <button className=\"signButton\" type=\"submit\" disabled={disable}>Register !</button>\n            </form>\n            <p> Already have an account? Sign in <span><Link to=\"/SignIn\" style={{textDecoration: 'none'}}>Here</Link></span></p>\n\n        </div>\n    )\n}\nexport default RegisterForm;","/Users/raphaelhebert/Desktop/snake/src/component/SignIn.js",["61"],[],"import { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport * as yup from 'yup'\nimport axios from 'axios'\n\nimport '../App.css'\n\n\nconst handleSubmit = e => {\n    e.preventDefault()\n    //post to the backend\n}\n\nconst schema = yup.object().shape({\n    email: yup\n        .string()\n        .email('Must be a valid email')\n        .max(255)\n        .required('Email is required'),\n    password: yup\n        .string()\n        .required('Please Enter your password')\n})\n\nconst SignIn = () => {\n    const[disable, setDisable]= useState(true)\n    const[formData, setFormData] = useState({\n        email: \"\",\n        password: \"\",\n    })\n\n    const[formErrors, setFormErrors] = useState({\n        email: \"\",\n        password: \"\",\n    })\n\n    const handleFormError = (name, value) => {\n        yup.reach(schema, name).validate(value)\n            .then(() => {\n                setFormErrors({\n                    ...formErrors,\n                    [name]: ''\n                })\n            })\n            .catch(err => {\n                setFormErrors({\n                    ...formErrors,\n                    [name]: err.errors[0]\n                })\n            })\n    }\n\n    const handleChange = e => {\n        const {name, value} = e.target\n        setFormData({\n            ...formData,\n            [name]: value,\n        })\n        handleFormError(name, value)\n    }\n\n    useEffect(() => {\n        schema.isValid(formData)\n            .then(valid => setDisable(!valid))\n    }, [formData])\n\n    return(\n        <div className=\"flexColCenter\">\n            <h2> Sign up!</h2>\n            <p> Sign in to your account</p>\n            <p> No account? Create one <span><Link to=\"/register\" style={{textDecoration: 'none'}}>Here</Link></span></p>\n            <form className=\"formLabels signForms\" onSubmit={handleSubmit}>\n                <label className=\"formLabels\"> email: \n                    <input name='email' onChange={handleChange} value={formData.email} type=\"email\" maxLength=\"255\"/>\n                    <p>{formErrors.email}</p>\n                </label>\n                <label className=\"formLabels\"> Password: \n                    <input name='password' onChange={handleChange} value={formData.password} type=\"password\" />\n                    <p>{formErrors.password}</p>\n                </label>\n                <button className=\"signButton\" type=\"submit\" disabled={disable}>Sign In !</button>\n            </form>\n            <p> Go back to the <span><Link to=\"/\" style={{textDecoration: 'none'}}>Main page</Link></span></p>\n        </div>\n    )\n}\nexport default SignIn;",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"62","replacedBy":"66"},{"ruleId":"64","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":32,"column":31,"nodeType":"70","endLine":32,"endColumn":33,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":39,"column":105,"nodeType":"74","messageId":"75","endLine":39,"endColumn":118},{"ruleId":"68","severity":1,"message":"76","line":121,"column":8,"nodeType":"70","endLine":121,"endColumn":14,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":13},{"ruleId":"78","severity":1,"message":"79","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":13},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],["82"],["83"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'applePos'. Either include it or remove the dependency array.","ArrayExpression",["84"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","React Hook useEffect has missing dependencies: 'apple', 'applePos', 'body', 'headLeft', 'headPos', 'headTop', 'loose', 'play', and 'speed'. Either include them or remove the dependency array. If 'loose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["85"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [applePos]",{"range":"90","text":"91"},"Update the dependencies array to be: [apple, applePos, body, head, headLeft, headPos, headTop, loose, play, speed]",{"range":"92","text":"93"},[807,809],"[applePos]",[3987,3993],"[apple, applePos, body, head, headLeft, headPos, headTop, loose, play, speed]"]
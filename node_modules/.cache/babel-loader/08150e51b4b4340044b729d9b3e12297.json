{"ast":null,"code":"var _jsxFileName = \"/Users/raphaelhebert/Desktop/snake/src/component/Scores/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from \"axios\";\nimport { axiosWithAuth } from '../../auth/axiosAuth';\nimport API_URL from '../../config';\nimport '../../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Scores = _ref => {\n  _s();\n\n  let {\n    loggedIn\n  } = _ref;\n  const [topTen, setTopTen] = useState([]);\n  const [userScores, setUserScores] = useState([]);\n  const nav = useNavigate();\n\n  const dateParser = date => {\n    return date.split('T').splice(1, 1).split('-').reverse().join(' ').toString();\n  };\n\n  useEffect(() => {\n    axios.get(API_URL + \"scores/topTen/snake\").then(res => {\n      setTopTen(res.data.reverse());\n    }).catch(err => {\n      setTopTen([{\n        username: \"no player available\",\n        score: 0\n      }]);\n    });\n    loggedIn && axiosWithAuth().get(API_URL + 'scores/user/snake').then(res => {\n      setUserScores(res.data);\n    }).catch(err => {\n      setUserScores([{\n        score: \"no scores available\"\n      }]);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flexColCenter\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tableBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Top Ten\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Rank\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Player\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: topTen.map((player, index) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: index % 2 === 0 ? \"evenRow\" : \"oddRow\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: player.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: player.score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: dateParser(player.created_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tableBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Scores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), loggedIn ? /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: userScores.map((player, index) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: index % 2 === 0 ? \"evenRow\" : \"oddRow\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", player.score, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 90\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                children: player.created_at\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 116\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 41\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"You must be logged in!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Scores, \"/tmuO7m1PL9tKZ9mdE+sI52oOKc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Scores;\nexport default Scores;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scores\");","map":{"version":3,"sources":["/Users/raphaelhebert/Desktop/snake/src/component/Scores/index.js"],"names":["useEffect","useState","useNavigate","axios","axiosWithAuth","API_URL","Scores","loggedIn","topTen","setTopTen","userScores","setUserScores","nav","dateParser","date","split","splice","reverse","join","toString","get","then","res","data","catch","err","username","score","map","player","index","created_at"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from \"axios\";\n\nimport { axiosWithAuth } from '../../auth/axiosAuth';\n\nimport API_URL from '../../config';\nimport '../../App.css'\n\nconst Scores = ({ loggedIn }) => {\n\n    const [topTen, setTopTen ] = useState([])\n    const [ userScores, setUserScores ] = useState([])\n\n    const nav = useNavigate()\n\n    const dateParser = (date) => {\n        return date.split('T').splice(1,1).split('-').reverse().join(' ').toString()\n    }\n\n    useEffect(() => {\n        axios.get(API_URL + \"scores/topTen/snake\")\n            .then(res => {\n                setTopTen(res.data.reverse())\n            })\n            .catch(err => {\n                setTopTen([{username: \"no player available\", score: 0}])\n            });\n        loggedIn &&\n        axiosWithAuth().get(API_URL + 'scores/user/snake')\n            .then(res => {\n                setUserScores(res.data)\n            })\n            .catch(err => {\n                setUserScores([{score: \"no scores available\"}])\n            });\n    }, [])\n    return(\n        <div className=\"flexColCenter\">\n            <div className=\"tableBox\">\n                <h2>Top Ten</h2>\n                <table>\n                <thead>\n                    <tr>\n                        <th>Rank</th>\n                        <th>Player</th>\n                        <th>score</th>\n                        <th>date</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        topTen.map((player, index) => {\n                            return (\n                                <tr className={index%2===0? \"evenRow\":\"oddRow\"}>\n                                    <td>{index + 1}</td>\n                                    <td>{player.username}</td>\n                                    <td>{player.score}</td>\n                                    <td>{dateParser(player.created_at)}</td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n                </table>\n            </div>\n            \n            <div className=\"tableBox\">\n                <h2>My Scores</h2>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>score</th>\n                            <th>date</th>\n                        </tr>\n                    </thead>\n                    { loggedIn?\n                        <tbody>\n                            {\n                                userScores.map( (player, index) => {\n                                    return (\n                                        <tr className={index%2===0? \"evenRow\":\"oddRow\"}> <td> {player.score} </td> <td>{player.created_at}</td></tr>\n                                    )\n                                })\n                            }\n                        </tbody>\n                        : <tr><td>You must be logged in!!</td></tr>\n                    }\n                </table>\n            </div>\n            {/* <button className=\"startButton\" onClick={() => nav('/')}>Back to home page</button> */}\n        </div>\n    )\n}\n\nexport default Scores"]},"metadata":{},"sourceType":"module"}
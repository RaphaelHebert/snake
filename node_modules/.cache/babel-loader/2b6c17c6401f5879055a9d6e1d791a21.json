{"ast":null,"code":"var _jsxFileName = \"/Users/raphaelhebert/Desktop/snake/src/component/snake/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport ScoreBar from '../ScoreBar';\nimport SnakeForm from '../SnakeForm';\nimport '../../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Snake = _ref => {\n  _s();\n\n  let {\n    apple,\n    applePos,\n    loose,\n    score\n  } = _ref;\n  const [head, setHead] = useState([48, 48]); //top, left\n\n  const [play, setPlay] = useState(false);\n  const [body, setBody] = useState([]);\n  const [direction, setDirection] = useState('ArrowRight'); //setup for starts and checks snake does go in unauthorized direction\n\n  const [speed, setSpeed] = useState(200);\n  const appleTop = apple[0] + '%';\n  const appleLeft = apple[1] + '%';\n  const headTop = head[0] + '%';\n  const headLeft = head[1] + '%'; //handle options form\n\n  const handleChange = e => {\n    setSpeed(parseInt(e.target.value));\n  };\n\n  const headPos = direction => {\n    switch (direction) {\n      case \"ArrowRight\":\n        setHead([head[0], (head[1] + 2) % 100]);\n        break;\n\n      case \"ArrowLeft\":\n        setHead([head[0], (100 + (head[1] - 2)) % 100]);\n        break;\n\n      case \"ArrowDown\":\n        setHead([(head[0] + 2) % 100, head[1]]);\n        break;\n\n      case \"ArrowUp\":\n        setHead([(100 + (head[0] - 2)) % 100, head[1]]);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleKeyDown = e => {\n    e.preventDefault();\n\n    if (body.length > 0) {\n      switch (e.key) {\n        case \"ArrowUp\":\n          if (direction === \"ArrowDown\" || direction === \"ArrowUp\") {\n            return;\n          }\n\n          break;\n\n        case \"ArrowDown\":\n          if (direction === \"ArrowUp\" || direction === \"ArrowDown\") {\n            return;\n          }\n\n          break;\n\n        case \"ArrowRight\":\n          if (direction === \"ArrowLeft\" || direction === \"ArrowRight\") {\n            return;\n          }\n\n          break;\n\n        case \"ArrowLeft\":\n          if (direction === \"ArrowLeft\" || direction === \"ArrowRight\") {\n            return;\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    if ([\"ArrowUp\", \"ArrowLeft\", \"ArrowRight\", \"ArrowDown\"].includes(e.key)) {\n      window.localStorage.setItem(\"snakeRunner\", JSON.stringify({\n        'direction': e.key\n      }));\n    } // else if(e.key === \"Enter\"){\n    //     if(!play){\n    //         setPlay(!play);\n    //         setHead([head[0], head[1]])\n    //     }\n    // }\n\n  };\n\n  const clickPlay = () => {\n    if (!play) {\n      setPlay(!play);\n      setHead([head[0], head[1]]);\n    }\n  };\n\n  useEffect(() => {\n    const bodySearch = 'o' + body.join('o').toString() + 'o';\n    console.log(bodySearch);\n    const headCheck = \"o\" + [head[0] + '%', head[1] + '%'].toString() + \"o\";\n    console.log(headCheck);\n\n    if (bodySearch.includes(headCheck)) {\n      setPlay(false);\n      loose();\n    }\n\n    setTimeout(() => {\n      const storage = window.localStorage.getItem(\"snakeRunner\");\n      const newDirection = JSON.parse(storage);\n\n      if (play && [\"ArrowUp\", \"ArrowLeft\", \"ArrowRight\", \"ArrowDown\"].includes(newDirection.direction)) {\n        if (head[0] === apple[0] && head[1] === apple[1]) {\n          setBody([[headTop, headLeft], ...body]);\n          applePos();\n        } else {\n          if (body.length > 0) {\n            const newBody = body.slice(0, body.length - 1);\n            newBody.unshift([headTop, headLeft]);\n            setBody(newBody);\n          }\n        }\n\n        setDirection(newDirection.direction);\n        headPos(newDirection.direction);\n      }\n    }, speed);\n  }, [head]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    onKeyDown: handleKeyDown,\n    tabIndex: \"0\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexColCenter sideDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"The Snake\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"This is the snake, you know the rules... Press \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Play !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 23\n        }, this), \" to start playing and use the \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"arrow keys\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 72\n        }, this), \" on your keyboard to change the snake's direction.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Connect to your account to save your score and eventually appear on the top players list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/SignIn\",\n        style: {\n          textDecoration: 'none'\n        },\n        children: \"Go to the login page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SnakeForm, {\n        handleChange: handleChange,\n        speed: speed,\n        play: play,\n        clickPlay: clickPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ScoreBar, {\n        score: score >= 0 ? score : 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"apple\",\n          style: {\n            top: appleTop,\n            left: appleLeft\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"head\",\n          style: {\n            top: headTop,\n            left: headLeft\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), body.length > 0 && body.map(bodyPart => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bodyPart\",\n          style: {\n            top: bodyPart[0],\n            left: bodyPart[1]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Snake, \"2dDr2knPDA7LE2QgjOGtuNyvX8A=\");\n\n_c = Snake;\nexport default Snake;\n\nvar _c;\n\n$RefreshReg$(_c, \"Snake\");","map":{"version":3,"sources":["/Users/raphaelhebert/Desktop/snake/src/component/snake/index.js"],"names":["useState","useEffect","Link","ScoreBar","SnakeForm","Snake","apple","applePos","loose","score","head","setHead","play","setPlay","body","setBody","direction","setDirection","speed","setSpeed","appleTop","appleLeft","headTop","headLeft","handleChange","e","parseInt","target","value","headPos","handleKeyDown","preventDefault","length","key","includes","window","localStorage","setItem","JSON","stringify","clickPlay","bodySearch","join","toString","console","log","headCheck","setTimeout","storage","getItem","newDirection","parse","newBody","slice","unshift","textDecoration","top","left","map","bodyPart"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\n\nimport ScoreBar from '../ScoreBar'\nimport SnakeForm from '../SnakeForm'\nimport '../../App.css'\n\n\n\nconst Snake = ({ apple, applePos, loose, score }) => {\n    const [head, setHead] = useState([48, 48]) //top, left\n    const [play, setPlay] = useState(false)\n    const [body, setBody] = useState([])\n    const [direction, setDirection] = useState('ArrowRight') //setup for starts and checks snake does go in unauthorized direction\n    const [speed, setSpeed] = useState(200)\n\n    const appleTop = apple[0] + '%'\n    const appleLeft = apple[1] +  '%'\n\n    const headTop = head[0] + '%'\n    const headLeft = head[1] + '%'\n\n    //handle options form\n    const handleChange = e => {\n        setSpeed(parseInt(e.target.value))\n    }\n\n    const headPos = (direction) => {\n        switch(direction){\n          case \"ArrowRight\":\n            setHead([head[0], (head[1] + 2) % 100])\n            break\n          case \"ArrowLeft\":\n            setHead([head[0], (100 + (head[1] - 2)) % 100])\n            break\n          case \"ArrowDown\":\n            setHead([ (head[0] + 2) % 100, head[1]])\n            break\n          case \"ArrowUp\":\n            setHead([(100 + (head[0] - 2)) % 100, head[1]]);\n            break\n          default:\n            break;\n        }\n    }\n    \n    const handleKeyDown = e => {\n        e.preventDefault();\n        if(body.length > 0){\n            switch(e.key){\n                case \"ArrowUp\":\n                    if(direction === \"ArrowDown\" || direction === \"ArrowUp\"){\n                        return\n                    } \n                    break;\n                case \"ArrowDown\":\n                    if(direction === \"ArrowUp\" || direction === \"ArrowDown\"){\n                        return\n                    }\n                    break;\n                case \"ArrowRight\":\n                    if(direction === \"ArrowLeft\" || direction === \"ArrowRight\"){\n                        return\n                    }\n                    break;\n                case \"ArrowLeft\":\n                    if(direction === \"ArrowLeft\" || direction === \"ArrowRight\"){\n                        return\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        if([\"ArrowUp\", \"ArrowLeft\", \"ArrowRight\", \"ArrowDown\"].includes(e.key)){\n            window.localStorage.setItem(\"snakeRunner\", JSON.stringify({'direction': e.key}))\n        }\n        // else if(e.key === \"Enter\"){\n        //     if(!play){\n        //         setPlay(!play);\n        //         setHead([head[0], head[1]])\n        //     }\n        // }\n    }\n\n    const clickPlay = () => {\n        if(!play){\n            setPlay(!play);\n            setHead([head[0], head[1]])\n        }\n    }\n\n    useEffect(() => {\n        const bodySearch = 'o' + body.join('o').toString() + 'o'\n        console.log(bodySearch)\n        const headCheck = \"o\" + [head[0] + '%', head[1] + '%'].toString() + \"o\"\n        console.log(headCheck)\n        if(bodySearch.includes(headCheck)){\n            setPlay(false)\n            loose();\n        }\n        setTimeout(() => {\n            const storage = window.localStorage.getItem(\"snakeRunner\")\n            const newDirection = JSON.parse(storage)\n            if(play && [\"ArrowUp\", \"ArrowLeft\", \"ArrowRight\", \"ArrowDown\"].includes(newDirection.direction)){\n                if(head[0] === apple[0] && head[1] === apple[1]){\n                    setBody([[headTop, headLeft], ...body])\n                    applePos()\n                } else {\n                    if(body.length > 0){\n                        const newBody = body.slice(0, body.length - 1)\n                        newBody.unshift([headTop, headLeft])\n                        setBody(newBody)\n                    }\n                }\n                setDirection(newDirection.direction);\n                headPos(newDirection.direction);\n            }   \n        }, speed)\n    }, [head])\n\n    return(\n        <div className='main' onKeyDown={handleKeyDown} tabIndex=\"0\">\n            <div className=\"flexColCenter sideDiv\">\n                <h1>The Snake</h1>\n                <p>This is the snake, you know the rules...\n                Press <span>Play !</span> to start playing and use the <span>arrow keys</span> on your keyboard to change the snake's direction.</p>\n                <p>Connect to your account to save your score and eventually appear on the top players list</p>\n                <Link to=\"/SignIn\" style={{textDecoration: 'none'}}>Go to the login page</Link>\n                <SnakeForm handleChange={handleChange} speed={speed} play={play} clickPlay={clickPlay}/>\n                <ScoreBar score={score >= 0? score: 0} />\n            </div>\n            <div className='container'>\n                <div className='screen'>\n                    <div className=\"apple\" style={{top: appleTop, left: appleLeft }} />\n                    <div className=\"head\" style={{top: headTop, left: headLeft }}/>\n                    { body.length > 0 && body.map(bodyPart => \n                            <div className=\"bodyPart\" style={{top: bodyPart[0], left: bodyPart[1] }}/>\n\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Snake;"]},"metadata":{},"sourceType":"module"}
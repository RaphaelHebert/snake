{"ast":null,"code":"var _jsxFileName = \"/Users/raphaelhebert/Desktop/snake/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Snake from './component/snake';\nimport ScoreBar from './component/ScoreBar';\nimport Lost from './component/Lost';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [apple, setApple] = useState([0, 0]);\n  const [score, setScore] = useState(-1);\n  const [lost, setLost] = useState(false);\n  const [direction, setDirection] = useState('ArrowRight');\n\n  const loose = () => {\n    setLost(true);\n  };\n\n  const applePos = () => {\n    let top = Math.floor(Math.random() * 100).toString();\n    let left = Math.floor(Math.random() * 100).toString();\n    top = top - top % 2;\n    left = left - left % 2;\n    console.log(`apple: ${top} ${left}`);\n    setApple([top, left]);\n    setScore(score + 1);\n  };\n\n  useEffect(() => applePos(), []);\n\n  const handleKeyDown = e => {\n    e.preventDefault();\n\n    if (body.length > 0) {\n      switch (e.key) {\n        case \"ArrowUp\":\n          if (direction === \"ArrowDown\" || direction === \"ArrowUp\") {\n            return;\n          }\n\n          break;\n\n        case \"ArrowDown\":\n          if (direction === \"ArrowUp\" || direction === \"ArrowDown\") {\n            return;\n          }\n\n          break;\n\n        case \"ArrowRight\":\n          if (direction === \"ArrowLeft\" || direction === \"ArrowRight\") {\n            return;\n          }\n\n          break;\n\n        case \"ArrowLeft\":\n          if (direction === \"ArrowLeft\" || direction === \"ArrowRight\") {\n            return;\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    if ([\"ArrowUp\", \"ArrowLeft\", \"ArrowRight\", \"ArrowDown\"].includes(e.key)) {\n      window.localStorage.setItem(\"snakeRunner\", JSON.stringify({\n        'direction': e.key\n      }));\n    } else if (e.key === \"Enter\") {\n      setPlay(!play);\n      setHead([head[0], head[1]]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onKeyDown: handleKeyDown,\n    tabIndex: \"0\",\n    children: [lost && /*#__PURE__*/_jsxDEV(Lost, {\n      score: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(Snake, {\n      apple: apple,\n      applePos: applePos,\n      score: score >= 0 ? score : 0,\n      loose: loose,\n      lost: lost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScoreBar, {\n      score: score >= 0 ? score : 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"7g9Pzl1PKAHBP+sqJsqAQn04nr0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/raphaelhebert/Desktop/snake/src/App.js"],"names":["useEffect","useState","Snake","ScoreBar","Lost","App","apple","setApple","score","setScore","lost","setLost","direction","setDirection","loose","applePos","top","Math","floor","random","toString","left","console","log","handleKeyDown","e","preventDefault","body","length","key","includes","window","localStorage","setItem","JSON","stringify","setPlay","play","setHead","head"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\n\nimport './App.css';\n\nimport Snake from './component/snake'\nimport ScoreBar from './component/ScoreBar';\nimport Lost from './component/Lost'\n\n\nfunction App() {\n  const [apple, setApple] = useState([0,0])\n  const [score, setScore] = useState(-1)\n  const [lost, setLost] = useState(false)\n  const [direction, setDirection] = useState('ArrowRight')\n  \n  const loose = () => {\n    setLost(true)\n  }\n\n  const applePos = () => {\n    let top = Math.floor( Math.random() * 100 ).toString()\n    let left = Math.floor( Math.random() * 100 ).toString()\n  \n    top = top - (top % 2)\n    left = left - (left % 2)\n    console.log(`apple: ${top} ${left}`)\n    setApple([top, left])\n    setScore(score + 1)\n  }\n\n  useEffect(() => applePos(), [])\n\n  const handleKeyDown = e => {\n    e.preventDefault();\n    if(body.length > 0){\n        switch(e.key){\n            case \"ArrowUp\":\n                if(direction === \"ArrowDown\" || direction === \"ArrowUp\"){\n                    return\n                } \n                break;\n            case \"ArrowDown\":\n                if(direction === \"ArrowUp\" || direction === \"ArrowDown\"){\n                    return\n                }\n                break;\n            case \"ArrowRight\":\n                if(direction === \"ArrowLeft\" || direction === \"ArrowRight\"){\n                    return\n                }\n                break;\n            case \"ArrowLeft\":\n                if(direction === \"ArrowLeft\" || direction === \"ArrowRight\"){\n                    return\n                }\n                break;\n            default:\n                break;\n        }\n    }\n    if([\"ArrowUp\", \"ArrowLeft\", \"ArrowRight\", \"ArrowDown\"].includes(e.key)){\n        window.localStorage.setItem(\"snakeRunner\", JSON.stringify({'direction': e.key}))\n    } else if(e.key === \"Enter\"){\n        setPlay(!play);\n        setHead([head[0], head[1]])\n    }\n  }\n\n\n  return (\n    <div onKeyDown={handleKeyDown} tabIndex=\"0\">\n      {lost && <Lost score={score}/>}\n      <Snake apple={apple} applePos={applePos} score={score >= 0? score: 0} loose={loose} lost={lost}/>\n      <ScoreBar score={score >= 0? score: 0} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
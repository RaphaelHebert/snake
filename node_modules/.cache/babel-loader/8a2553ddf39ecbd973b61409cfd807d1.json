{"ast":null,"code":"var _jsxFileName = \"/Users/raphaelhebert/Desktop/snake/src/component/RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst handleSubmit = e => {\n  e.preventDefault(); //post to the backend\n};\n\nconst schema = yup.object().shape({\n  uname: yup.string().required(\"a username is required\").min(3, \"must be at least 3 characters long\").max(24, \"username is 24 characters max\"),\n  email: yup.string().email('Must be a valid email').max(255).required('Email is required'),\n  password: yup.string().required('Please Enter your password').matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"),\n  passwordConfirmation: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match')\n});\n\nconst RegisterForm = () => {\n  _s();\n\n  const [disable, setDisable] = useState(true);\n  const [formData, setFormData] = useState({\n    uname: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\"\n  });\n  const [formErrors, setFormErrors] = useState({\n    uname: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\"\n  });\n\n  const handleFormError = (name, value) => {\n    yup.reach(schema, name).validate(value).then(() => {\n      setFormErrors({ ...formErrors,\n        [name]: ''\n      });\n    }).catch(err => {\n      setFormErrors({ ...formErrors,\n        [name]: err.errors[0]\n      });\n    });\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n    handleFormError(name, value);\n  };\n\n  useEffect(() => {\n    schema.isValid(formData).then(valid => setDisable(!valid));\n  }, [formData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flexColCenter\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Sign up!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Sign up to be able to login and compete with the other players\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\" Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"uname\",\n          onChange: handleChange,\n          value: formData.uname,\n          type: \"text\",\n          maxlength: \"24\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formErrors.uname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\" email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          onChange: handleChange,\n          value: formData.email,\n          type: \"email\",\n          maxlength: \"255\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formErrors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\" Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          onChange: handleChange,\n          value: formData.password,\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formErrors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\" Password confirmation:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"passwordConfirmation\",\n          onChange: handleChange,\n          value: formData.passwordConfirmation,\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formErrors.passwordConfirmation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"startButton\",\n        type: \"submit\",\n        disabled: disable,\n        children: \"Register !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterForm, \"yuBh3n3ggxWXL5BdngI2wmoRYfQ=\");\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/Users/raphaelhebert/Desktop/snake/src/component/RegisterForm.js"],"names":["useState","useEffect","yup","axios","handleSubmit","e","preventDefault","schema","object","shape","uname","string","required","min","max","email","password","matches","passwordConfirmation","oneOf","ref","RegisterForm","disable","setDisable","formData","setFormData","formErrors","setFormErrors","handleFormError","name","value","reach","validate","then","catch","err","errors","handleChange","target","isValid","valid"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport * as yup from 'yup'\nimport axios from 'axios'\n\n\nconst handleSubmit = e => {\n    e.preventDefault()\n    //post to the backend\n}\n\nconst schema = yup.object().shape({\n    uname: yup\n        .string()\n        .required(\"a username is required\")\n        .min(3, \"must be at least 3 characters long\")\n        .max(24, \"username is 24 characters max\"),\n    email: yup\n        .string()\n        .email('Must be a valid email')\n        .max(255)\n        .required('Email is required'),\n    password: yup\n        .string()\n        .required('Please Enter your password')\n        .matches(\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n        \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n        ),\n    passwordConfirmation: yup\n        .string()\n        .oneOf([yup.ref('password'), null], 'Passwords must match')\n\n})\n\nconst RegisterForm = () => {\n    const[disable, setDisable]= useState(true)\n    const[formData, setFormData] = useState({\n        uname: \"\",\n        email: \"\",\n        password: \"\",\n        passwordConfirmation: \"\"\n    })\n\n    const[formErrors, setFormErrors] = useState({\n        uname: \"\",\n        email: \"\",\n        password: \"\",\n        passwordConfirmation: \"\"\n    })\n\n    const handleFormError = (name, value) => {\n        yup.reach(schema, name).validate(value)\n            .then(() => {\n                setFormErrors({\n                    ...formErrors,\n                    [name]: ''\n                })\n            })\n            .catch(err => {\n                setFormErrors({\n                    ...formErrors,\n                    [name]: err.errors[0]\n                })\n            })\n    }\n\n    const handleChange = e => {\n        const {name, value} = e.target\n        setFormData({\n            ...formData,\n            [name]: value,\n        })\n        handleFormError(name, value)\n    }\n\n    useEffect(() => {\n        schema.isValid(formData)\n            .then(valid => setDisable(!valid))\n    }, [formData])\n\n    return(\n        <div className=\"flexColCenter\">\n            <h2> Sign up!</h2>\n            <p> Sign up to be able to login and compete with the other players</p>\n            <form onSubmit={handleSubmit}>\n                <label> Username: \n                    <input name='uname' onChange={handleChange} value={formData.uname} type=\"text\" maxlength=\"24\"/>\n                    <p>{formErrors.uname}</p>\n                </label>\n                <label> email: \n                    <input name='email' onChange={handleChange} value={formData.email} type=\"email\" maxlength=\"255\"/>\n                    <p>{formErrors.email}</p>\n                </label>\n                <label> Password: \n                    <input name='password' onChange={handleChange} value={formData.password} type=\"password\" />\n                    <p>{formErrors.password}</p>\n                </label>\n                <label> Password confirmation: \n                    <input name='passwordConfirmation' onChange={handleChange} value={formData.passwordConfirmation} type=\"password\" />\n                    <p>{formErrors.passwordConfirmation}</p>\n                </label>\n                <button className=\"startButton\" type=\"submit\" disabled={disable}>Register !</button>\n            </form>\n        </div>\n    )\n}\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/raphaelhebert/Desktop/snake/src/component/RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport '../App.css';\nimport { API_URL } from '../config.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  uname: yup.string().required(\"a username is required\").min(3, \"must be at least 3 characters long\").max(24, \"username is 24 characters max\"),\n  email: yup.string().email('Must be a valid email').max(255).required('Email is required'),\n  password: yup.string().required('Please Enter your password').matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"),\n  passwordConfirmation: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match')\n});\nconst baseForm = {\n  uname: \"\",\n  email: \"\",\n  password: \"\",\n  passwordConfirmation: \"\"\n};\n\nconst RegisterForm = () => {\n  _s();\n\n  const [disable, setDisable] = useState(true);\n  const [formData, setFormData] = useState(baseForm);\n  const [formErrors, setFormErrors] = useState(baseForm);\n  const [registrationError, setRegistrationError] = useState(null);\n  const nav = useNavigate();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newUser = {\n      username: formData.uname.trim(),\n      email: formData.email.trim(),\n      password: formData.password\n    };\n    axios.post(API_URL + \"/users\", newUser).then(res => {\n      setFormData(baseForm);\n      setRegistrationError(null);\n      nav('./SignIn');\n    }).catch(err => {\n      setRegistrationError(`An error occurred during the registration process: \\n ${err.message} \\nPlease try again later.`);\n    });\n  };\n\n  const handleFormError = (name, value) => {\n    yup.reach(schema, name).validate(value).then(() => {\n      setFormErrors({ ...formErrors,\n        [name]: ''\n      });\n    }).catch(err => {\n      setFormErrors({ ...formErrors,\n        [name]: err.errors[0]\n      });\n    });\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n    handleFormError(name, value);\n  };\n\n  useEffect(() => {\n    schema.isValid(formData).then(valid => setDisable(!valid));\n  }, [formData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flexColCenter\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Sign up!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Sign up to be able to login and compete with the other players\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), registrationError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"errorMessage\",\n      children: [\" \", registrationError, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"formLabels signForms\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"formLabels\",\n        children: [\" Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"uname\",\n          onChange: handleChange,\n          value: formData.uname,\n          type: \"text\",\n          maxLength: \"24\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formErrors.uname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"formLabels\",\n        children: [\" email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          onChange: handleChange,\n          value: formData.email,\n          type: \"email\",\n          maxLength: \"255\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formErrors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"formLabels\",\n        children: [\" Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          onChange: handleChange,\n          value: formData.password,\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formErrors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"formLabels\",\n        children: [\" Password confirmation:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"passwordConfirmation\",\n          onChange: handleChange,\n          value: formData.passwordConfirmation,\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formErrors.passwordConfirmation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"signButton\",\n        type: \"submit\",\n        disabled: disable,\n        children: \"Register !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Already have an account? Sign in \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/SignIn\",\n          style: {\n            textDecoration: 'none'\n          },\n          children: \"Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterForm, \"uG7G8s6IrBLZRAMEuySIYX3bRsE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/Users/raphaelhebert/Desktop/snake/src/component/RegisterForm.js"],"names":["useState","useEffect","Link","useNavigate","yup","axios","API_URL","schema","object","shape","uname","string","required","min","max","email","password","matches","passwordConfirmation","oneOf","ref","baseForm","RegisterForm","disable","setDisable","formData","setFormData","formErrors","setFormErrors","registrationError","setRegistrationError","nav","handleSubmit","e","preventDefault","newUser","username","trim","post","then","res","catch","err","message","handleFormError","name","value","reach","validate","errors","handleChange","target","isValid","valid","textDecoration"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport * as yup from 'yup'\nimport axios from 'axios'\n\nimport '../App.css'\n\nimport { API_URL } from '../config.js'\n\nconst schema = yup.object().shape({\n    uname: yup\n        .string()\n        .required(\"a username is required\")\n        .min(3, \"must be at least 3 characters long\")\n        .max(24, \"username is 24 characters max\"),\n    email: yup\n        .string()\n        .email('Must be a valid email')\n        .max(255)\n        .required('Email is required'),\n    password: yup\n        .string()\n        .required('Please Enter your password')\n        .matches(\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n        \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n        ),\n    passwordConfirmation: yup\n        .string()\n        .oneOf([yup.ref('password'), null], 'Passwords must match')\n\n})\n\nconst baseForm = {\n    uname: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\"\n}\n\nconst RegisterForm = () => {\n    const[disable, setDisable]= useState(true)\n    const[formData, setFormData] = useState(baseForm)\n    const[formErrors, setFormErrors] = useState(baseForm)\n    const[registrationError, setRegistrationError] = useState(null)\n\n    const nav = useNavigate()\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        const newUser = {\n            username: formData.uname.trim(),\n            email: formData.email.trim(),\n            password: formData.password,\n        }\n            axios.post(API_URL + \"/users\", newUser)\n                .then(res => {\n                    setFormData(baseForm)\n                    setRegistrationError(null)\n                    nav('./SignIn')\n                })\n                .catch(err => {\n                    setRegistrationError(`An error occurred during the registration process: \\n ${err.message} \\nPlease try again later.`)\n                })\n    }\n    \n\n    const handleFormError = (name, value) => {\n        yup.reach(schema, name).validate(value)\n            .then(() => {\n                setFormErrors({\n                    ...formErrors,\n                    [name]: ''\n                })\n            })\n            .catch(err => {\n                setFormErrors({\n                    ...formErrors,\n                    [name]: err.errors[0]\n                })\n            })\n    }\n\n    const handleChange = e => {\n        const {name, value} = e.target\n        setFormData({\n            ...formData,\n            [name]: value,\n        })\n        handleFormError(name, value)\n    }\n\n    useEffect(() => {\n        schema.isValid(formData)\n            .then(valid => setDisable(!valid))\n    }, [formData])\n\n    return(\n        <div className=\"flexColCenter\">\n            <h2> Sign up!</h2>\n            <p> Sign up to be able to login and compete with the other players</p>\n            {registrationError && <p className=\"errorMessage\"> {registrationError} </p>}\n            <form className=\"formLabels signForms\" onSubmit={handleSubmit}>\n                <label className=\"formLabels\"> Username: \n                    <input name='uname' onChange={handleChange} value={formData.uname} type=\"text\" maxLength=\"24\"/>\n                    <p>{formErrors.uname}</p>\n                </label>\n                <label className=\"formLabels\"> email: \n                    <input name='email' onChange={handleChange} value={formData.email} type=\"email\" maxLength=\"255\"/>\n                    <p>{formErrors.email}</p>\n                </label>\n                <label className=\"formLabels\"> Password: \n                    <input name='password' onChange={handleChange} value={formData.password} type=\"password\" />\n                    <p>{formErrors.password}</p>\n                </label>\n                <label className=\"formLabels\"> Password confirmation: \n                    <input name='passwordConfirmation' onChange={handleChange} value={formData.passwordConfirmation} type=\"password\" />\n                    <p>{formErrors.passwordConfirmation}</p>\n                </label>\n                <button className=\"signButton\" type=\"submit\" disabled={disable}>Register !</button>\n            </form>\n            <p> Already have an account? Sign in <span><Link to=\"/SignIn\" style={{textDecoration: 'none'}}>Here</Link></span></p>\n        </div>\n    )\n}\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}
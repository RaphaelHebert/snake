{"ast":null,"code":"var _jsxFileName = \"/Users/raphaelhebert/Desktop/snake/src/component/snake/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport ScoreBar from '../ScoreBar';\nimport '../../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Snake = _ref => {\n  _s();\n\n  let {\n    apple,\n    applePos,\n    loose,\n    score\n  } = _ref;\n  const [head, setHead] = useState([48, 48]); //top, left\n\n  const [play, setPlay] = useState(false);\n  const [body, setBody] = useState([]);\n  const [direction, setDirection] = useState('ArrowRight'); //setup for starts and checks snake does go in unauthorized direction\n\n  const appleTop = apple[0] + '%';\n  const appleLeft = apple[1] + '%';\n  const headTop = head[0] + '%';\n  const headLeft = head[1] + '%';\n\n  const headPos = direction => {\n    switch (direction) {\n      case \"ArrowRight\":\n        setHead([head[0], (head[1] + 2) % 100]);\n        break;\n\n      case \"ArrowLeft\":\n        setHead([head[0], (100 + (head[1] - 2)) % 100]);\n        break;\n\n      case \"ArrowDown\":\n        setHead([(head[0] + 2) % 100, head[1]]);\n        break;\n\n      case \"ArrowUp\":\n        setHead([(100 + (head[0] - 2)) % 100, head[1]]);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleKeyDown = e => {\n    e.preventDefault();\n\n    if (body.length > 0) {\n      switch (e.key) {\n        case \"ArrowUp\":\n          if (direction === \"ArrowDown\" || direction === \"ArrowUp\") {\n            return;\n          }\n\n          break;\n\n        case \"ArrowDown\":\n          if (direction === \"ArrowUp\" || direction === \"ArrowDown\") {\n            return;\n          }\n\n          break;\n\n        case \"ArrowRight\":\n          if (direction === \"ArrowLeft\" || direction === \"ArrowRight\") {\n            return;\n          }\n\n          break;\n\n        case \"ArrowLeft\":\n          if (direction === \"ArrowLeft\" || direction === \"ArrowRight\") {\n            return;\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    if ([\"ArrowUp\", \"ArrowLeft\", \"ArrowRight\", \"ArrowDown\"].includes(e.key)) {\n      window.localStorage.setItem(\"snakeRunner\", JSON.stringify({\n        'direction': e.key\n      }));\n    } else if (e.key === \"Enter\") {\n      setPlay(!play);\n      setHead([head[0], head[1]]);\n    }\n  };\n\n  useEffect(() => {\n    const bodySearch = 'o' + body.join('o').toString() + 'o';\n    console.log(bodySearch);\n    const headCheck = \"o\" + [head[0] + '%', head[1] + '%'].toString() + \"o\";\n    console.log(headCheck);\n\n    if (bodySearch.includes(headCheck)) {\n      setPlay(false);\n      loose();\n    }\n\n    setTimeout(() => {\n      const storage = window.localStorage.getItem(\"snakeRunner\");\n      const newDirection = JSON.parse(storage);\n\n      if (play && [\"ArrowUp\", \"ArrowLeft\", \"ArrowRight\", \"ArrowDown\"].includes(newDirection.direction)) {\n        if (head[0] === apple[0] && head[1] === apple[1]) {\n          setBody([[headTop, headLeft], ...body]);\n          applePos();\n        } else {\n          if (body.length > 0) {\n            const newBody = body.slice(0, body.length - 1);\n            newBody.unshift([headTop, headLeft]);\n            setBody(newBody);\n          }\n        }\n\n        setDirection(newDirection.direction);\n        headPos(newDirection.direction);\n      }\n    }, 200);\n  }, [head]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    onKeyDown: handleKeyDown,\n    tabIndex: \"0\",\n    children: [/*#__PURE__*/_jsxDEV(ScoreBar, {\n      score: score >= 0 ? score : 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"apple\",\n          style: {\n            top: appleTop,\n            left: appleLeft\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"head\",\n          style: {\n            top: headTop,\n            left: headLeft\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), body.length > 0 && body.map(bodyPart => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bodyPart\",\n          style: {\n            top: bodyPart[0],\n            left: bodyPart[1]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Snake, \"gqI9UTyebHJQKrST1Ya8Cp3yttI=\");\n\n_c = Snake;\nexport default Snake;\n\nvar _c;\n\n$RefreshReg$(_c, \"Snake\");","map":{"version":3,"sources":["/Users/raphaelhebert/Desktop/snake/src/component/snake/index.js"],"names":["useState","useEffect","ScoreBar","Snake","apple","applePos","loose","score","head","setHead","play","setPlay","body","setBody","direction","setDirection","appleTop","appleLeft","headTop","headLeft","headPos","handleKeyDown","e","preventDefault","length","key","includes","window","localStorage","setItem","JSON","stringify","bodySearch","join","toString","console","log","headCheck","setTimeout","storage","getItem","newDirection","parse","newBody","slice","unshift","top","left","map","bodyPart"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\n\n\nimport ScoreBar from '../ScoreBar'\nimport '../../App.css'\n\n\n\nconst Snake = ({ apple, applePos, loose, score }) => {\n    const [head, setHead] = useState([48, 48]) //top, left\n    const [play, setPlay] = useState(false)\n    const [body, setBody] = useState([])\n    const [direction, setDirection] = useState('ArrowRight') //setup for starts and checks snake does go in unauthorized direction\n\n    const appleTop = apple[0] + '%'\n    const appleLeft = apple[1] +  '%'\n\n    const headTop = head[0] + '%'\n    const headLeft = head[1] + '%'\n\n   \n\n    const headPos = (direction) => {\n        switch(direction){\n          case \"ArrowRight\":\n            setHead([head[0], (head[1] + 2) % 100])\n            break\n          case \"ArrowLeft\":\n            setHead([head[0], (100 + (head[1] - 2)) % 100])\n            break\n          case \"ArrowDown\":\n            setHead([ (head[0] + 2) % 100, head[1]])\n            break\n          case \"ArrowUp\":\n            setHead([(100 + (head[0] - 2)) % 100, head[1]]);\n            break\n          default:\n            break;\n        }\n    }\n    \n    const handleKeyDown = e => {\n        e.preventDefault();\n        if(body.length > 0){\n            switch(e.key){\n                case \"ArrowUp\":\n                    if(direction === \"ArrowDown\" || direction === \"ArrowUp\"){\n                        return\n                    } \n                    break;\n                case \"ArrowDown\":\n                    if(direction === \"ArrowUp\" || direction === \"ArrowDown\"){\n                        return\n                    }\n                    break;\n                case \"ArrowRight\":\n                    if(direction === \"ArrowLeft\" || direction === \"ArrowRight\"){\n                        return\n                    }\n                    break;\n                case \"ArrowLeft\":\n                    if(direction === \"ArrowLeft\" || direction === \"ArrowRight\"){\n                        return\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        if([\"ArrowUp\", \"ArrowLeft\", \"ArrowRight\", \"ArrowDown\"].includes(e.key)){\n            window.localStorage.setItem(\"snakeRunner\", JSON.stringify({'direction': e.key}))\n        } else if(e.key === \"Enter\"){\n            setPlay(!play);\n            setHead([head[0], head[1]])\n        }\n    }\n\n    useEffect(() => {\n        const bodySearch = 'o' + body.join('o').toString() + 'o'\n        console.log(bodySearch)\n        const headCheck = \"o\" + [head[0] + '%', head[1] + '%'].toString() + \"o\"\n        console.log(headCheck)\n        if(bodySearch.includes(headCheck)){\n            setPlay(false)\n            loose();\n        }\n        setTimeout(() => {\n            const storage = window.localStorage.getItem(\"snakeRunner\")\n            const newDirection = JSON.parse(storage)\n            if(play && [\"ArrowUp\", \"ArrowLeft\", \"ArrowRight\", \"ArrowDown\"].includes(newDirection.direction)){\n                if(head[0] === apple[0] && head[1] === apple[1]){\n                    setBody([[headTop, headLeft], ...body])\n                    applePos()\n                } else {\n                    if(body.length > 0){\n                        const newBody = body.slice(0, body.length - 1)\n                        newBody.unshift([headTop, headLeft])\n                        setBody(newBody)\n                    }\n                }\n                setDirection(newDirection.direction);\n                headPos(newDirection.direction);\n            }   \n        }, 200)\n    }, [head])\n\n    return(\n        <div className='main' onKeyDown={handleKeyDown} tabIndex=\"0\">\n        <ScoreBar score={score >= 0? score: 0} />\n\n            <div className='container'>\n                <div className='screen'>\n                    <div className=\"apple\" style={{top: appleTop, left: appleLeft }} />\n                    <div className=\"head\" style={{top: headTop, left: headLeft }}/>\n                    { body.length > 0 && body.map(bodyPart => \n                            <div className=\"bodyPart\" style={{top: bodyPart[0], left: bodyPart[1] }}/>\n    \n                    )}\n\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Snake"]},"metadata":{},"sourceType":"module"}